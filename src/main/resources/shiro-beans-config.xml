<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>
		<!-- override these for application-specific URLs if you like -->
		<property name="loginUrl" value="/login.html"/>
		<!-- <property name="successUrl" value="/frame/index"/> -->
		<!-- <property name="unauthorizedUrl" value="/unauthorized.jsp"/> -->
		<!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean -->
		<!-- defined will be automatically acquired and available via its beanName in chain -->
		<!-- definitions, but you can perform instance overrides or name aliases here if you like -->
		<!-- <property name="filters">
			<map>
				<entry key="anAlias" value-ref="someFilter"/>
			</map>
		</property> -->
		<property name="filterChainDefinitions">
			<value>
				# some example chain definitions: 从上往下找到第一个匹配的生效
				# 1). anon  : 匿名访问，无需登录 
     			# 2). authc : 登录后才能访问 
     			# 3). logout: 登出
     			# 4). roles : 角色过滤器
				/admin/** = authc, roles[admin]
				/docs/** = authc, perms[document:read]
				# /account/test2=authc, perms[account:add]
				/** = authc
				# more URL-to-FilterChain definitions here
			</value>
		</property>
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple relms, use the 'realms' property instead. -->
		<property name="realm" ref="myRealm"/>
		<!-- <property name="realm">
			<list>
				<ref bean="myRealm1"/>
				<ref bean="myRealm2"/>
			</list>
		</property> -->
		<!-- By default the servlet container sessions will be used. Uncomment this line 
			 to use shiro's native sessions (see the JavaDoc for more): -->
		<!-- <property name="sessionMode" value="native" /> -->
	</bean>
	
	<!-- Define the Shiro Realm implementation you want to use to connect to you back-end -->
	<!-- security datasource -->
	<bean id="myRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
		<property name="dataSource" ref="dataSource" />
		<property name="permissionsLookupEnabled" value="true" />
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor" />
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor" >
		<property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>